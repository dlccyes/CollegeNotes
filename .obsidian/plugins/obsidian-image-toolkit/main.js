/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

// العربية
var ar = {};

// čeština
var cz = {};

// Dansk
var da = {};

// Deutsch
var de = {};

// English
var en = {
    // settings
    IMAGE_TOOLKIT_SETTINGS_TITLE: "Settings for image toolkit.",
    VIEW_IMAGE_TOGGLE_NAME: "Enable Clicking on a Picture to View",
    VIEW_IMAGE_TOGGLE_DESC: "You can zoom, rotate and drag it on the popup layer when clicking on a picture.",
};

// British English
var enGB = {};

// Español
var es = {};

// français
var fr = {};

// हिन्दी
var hi = {};

// Bahasa Indonesia
var id = {};

// Italiano
var it = {};

// 日本語
var ja = {};

// 한국어
var ko = {};

// Nederlands
var nl = {};

// Norsk
var no = {};

// język polski	
var pl = {};

// Português
var pt = {};

// Português do Brasil
// Brazilian Portuguese
var ptBR = {};

// Română
var ro = {};

// русский
var ru = {};

// Türkçe
var tr = {};

// 简体中文
var zhCN = {
    // settings
    IMAGE_TOOLKIT_SETTINGS_TITLE: "Image Toolkit 插件设置",
    VIEW_IMAGE_TOGGLE_NAME: "点击图片预览",
    VIEW_IMAGE_TOGGLE_DESC: "开启后，点击图片会弹出预览界面，可对图片进行缩放、旋转、拖动。",
};

// 繁體中文
var zhTW = {};

const localeMap = {
    ar,
    cs: cz,
    da,
    de,
    en,
    "en-gb": enGB,
    es,
    fr,
    hi,
    id,
    it,
    ja,
    ko,
    nl,
    nn: no,
    pl,
    pt,
    "pt-br": ptBR,
    ro,
    ru,
    tr,
    "zh-cn": zhCN,
    "zh-tw": zhTW,
};
const locale = localeMap[obsidian.moment.locale()];
function t(str) {
    if (!locale) {
        console.error("Error: Image toolkit locale not found", obsidian.moment.locale());
    }
    return (locale && locale[str]) || en[str];
}

const DEFAULT_SETTINGS = {
    viewImageToggle: true,
    imgActiveConflict: false
};
class ImageToolkitSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        let { containerEl } = this;
        containerEl.empty();
        containerEl.createEl('h2', { text: t("IMAGE_TOOLKIT_SETTINGS_TITLE") });
        new obsidian.Setting(containerEl)
            .setName(t("VIEW_IMAGE_TOGGLE_NAME"))
            .setDesc(t("VIEW_IMAGE_TOGGLE_DESC"))
            .addToggle(toggle => toggle
            .setValue(this.plugin.settings.viewImageToggle)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.viewImageToggle = value;
            yield this.plugin.saveSettings();
        })));
    }
}

const ZOOM_FACTOR = 0.8;
const IMG_TOOLBAR_ICONS = [{
        key: 'zoom_in',
        class: 'toolbar_zoom_im',
    }, {
        key: 'zoom_out',
        class: 'toolbar_zoom_out',
    }, {
        key: 'refresh',
        class: 'toolbar_refresh',
    }, {
        key: 'rotate_left',
        class: 'toolbar_rotate_left',
    }, {
        key: 'rotate_right',
        class: 'toolbar_rotate_right',
    }];
const CLOSE_ICON = {
    alt: 'close',
    svg: `<svg t="1628406604474" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6292" width="32" height="32"><path d="M0.0512 0.0512m102.4 0l819.0976 0q102.4 0 102.4 102.4l0 819.0976q0 102.4-102.4 102.4l-819.0976 0q-102.4 0-102.4-102.4l0-819.0976q0-102.4 102.4-102.4Z" fill="#000000" opacity=".6" p-id="6293"></path><path d="M692.5312 331.4944a30.592 30.592 0 0 1 0 43.264l-137.2416 137.216 137.216 137.2672a30.592 30.592 0 0 1-43.264 43.264l-137.216-137.216-137.2416 137.216a30.592 30.592 0 1 1-43.264-43.264l137.216-137.2416-137.216-137.216a30.592 30.592 0 1 1 43.264-43.2896l137.216 137.216 137.216-137.216a30.592 30.592 0 0 1 43.2896 0z" fill="#FFFFFF" p-id="6294"></path></svg>`
};

/**
 * calculate zoom size of the target image
 * @param imgSrc
 * @returns
 */
function calculateImgZoomSize(realImg, TARGET_IMG_INFO) {
    // if (!imgSrc) {
    //     return;
    // }
    // 当前窗口宽高（可视宽高）
    const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;
    const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;
    // 当前窗口缩放后的宽高
    const windowZoomWidth = windowWidth * ZOOM_FACTOR;
    const windowZoomHeight = windowHeight * ZOOM_FACTOR;
    let tempWidth = realImg.width, tempHeight = realImg.height;
    if (realImg.height > windowZoomHeight) {
        tempHeight = windowZoomHeight;
        if ((tempWidth = tempHeight / realImg.height * realImg.width) > windowZoomWidth) {
            tempWidth = windowZoomWidth;
        }
    }
    else if (realImg.width > windowZoomWidth) {
        tempWidth = windowZoomWidth;
        tempHeight = tempWidth / realImg.width * realImg.height;
    }
    let width = tempWidth + 'px';
    let height = tempHeight + 'px';
    let top = (windowHeight - tempHeight) / 2 + 'px';
    let left = (windowWidth - tempWidth) / 2 + 'px';
    // cache image info
    TARGET_IMG_INFO.curWidth = tempWidth;
    TARGET_IMG_INFO.curHeight = tempHeight;
    TARGET_IMG_INFO.realWidth = realImg.width;
    TARGET_IMG_INFO.realHeight = realImg.height;
    /* console.log('calculateImgZoomSize', 'realImg: ' + realImg.width + ',' + realImg.height,
        'tempSize: ' + tempWidth + ',' + tempHeight,
        'windowZoomSize: ' + windowZoomWidth + ',' + windowZoomHeight,
        'windowSize: ' + windowWidth + ',' + windowHeight); */
    return { width, height, top, left };
}
/**
 * zoom an image
 * @param ratio
 * @param imgInfo
 * @returns
 */
const zoom = (ratio, TARGET_IMG_INFO) => {
    ratio = ratio > 0 ? 1 + ratio : 1 / (1 - ratio);
    let zoomRatio = TARGET_IMG_INFO.curWidth * ratio / TARGET_IMG_INFO.realWidth;
    const newWidth = TARGET_IMG_INFO.realWidth * zoomRatio;
    const newHeight = TARGET_IMG_INFO.curHeight * zoomRatio;
    // cache image info
    TARGET_IMG_INFO.curWidth = newWidth;
    TARGET_IMG_INFO.curHeight = newHeight;
    return newWidth;
};
const rotate = (degree, TARGET_IMG_INFO) => {
    TARGET_IMG_INFO.imgViewEl.style.setProperty('transform', 'rotate(' + (TARGET_IMG_INFO.rotate += degree) + 'deg)');
};

let DRAGGING = false;
let REAL_IMG_INTERVAL;
const TARGET_IMG_INFO = {
    // true: the popup layer of viewing image is displayed
    state: false,
    viewContainerEl: null,
    imgViewEl: null,
    imgTitleEl: null,
    curWidth: 0,
    curHeight: 0,
    realWidth: 0,
    realHeight: 0,
    moveX: 0,
    moveY: 0,
    rotate: 0
};
function renderViewContainer(targetEl, containerEl) {
    initViewContainer(targetEl, containerEl);
    openViewContainer();
    refreshImg(targetEl.src, targetEl.alt);
}
function initViewContainer(targetEl, containerEl) {
    if (null == TARGET_IMG_INFO.viewContainerEl || !TARGET_IMG_INFO.viewContainerEl) {
        // console.log('initViewContainer....', containerEl);
        // <div class="image-toolkit-view-container">
        TARGET_IMG_INFO.viewContainerEl = createDiv();
        TARGET_IMG_INFO.viewContainerEl.setAttribute('class', 'image-toolkit-view-container');
        containerEl.appendChild(TARGET_IMG_INFO.viewContainerEl);
        // <div class="img-container"> <img class="img-view" src="" alt=""> </div>
        const imgContainerDiv = createDiv();
        imgContainerDiv.setAttribute('class', 'img-container');
        TARGET_IMG_INFO.imgViewEl = createEl('img');
        TARGET_IMG_INFO.imgViewEl.setAttribute('class', 'img-view');
        TARGET_IMG_INFO.imgViewEl.setAttribute('src', '');
        TARGET_IMG_INFO.imgViewEl.setAttribute('alt', '');
        imgContainerDiv.appendChild(TARGET_IMG_INFO.imgViewEl);
        TARGET_IMG_INFO.viewContainerEl.appendChild(imgContainerDiv);
        // <div class="img-close"></div>
        const imgCloseDiv = createDiv();
        imgCloseDiv.innerHTML = CLOSE_ICON.svg;
        imgCloseDiv.setAttribute('class', 'img-close');
        // add event: close the popup layer (image-toolkit-view-container) via clicking close button
        imgCloseDiv.addEventListener('click', closeViewContainer);
        TARGET_IMG_INFO.viewContainerEl.appendChild(imgCloseDiv);
        // <div class="img-footer"> ... <div>
        const imgFooterDiv = createDiv();
        imgFooterDiv.setAttribute('class', 'img-footer');
        TARGET_IMG_INFO.viewContainerEl.appendChild(imgFooterDiv);
        // <div class="img-title"></div>
        TARGET_IMG_INFO.imgTitleEl = createDiv();
        TARGET_IMG_INFO.imgTitleEl.setAttribute('class', 'img-title');
        imgFooterDiv.appendChild(TARGET_IMG_INFO.imgTitleEl);
        // <ul class="img-toolbar">
        const imgToolbarUl = createEl('ul');
        imgToolbarUl.setAttribute('class', 'img-toolbar');
        imgFooterDiv.appendChild(imgToolbarUl);
        for (const toolbar of IMG_TOOLBAR_ICONS) {
            const toolbarLi = createEl('li');
            toolbarLi.setAttribute('class', toolbar.class);
            imgToolbarUl.appendChild(toolbarLi);
        }
        // add event: for img-toolbar ul
        imgToolbarUl.addEventListener('click', clickToolbarUl);
    }
    // show the clicked image
    renderImgTitle(targetEl.alt);
    // add all events
    addOrRemoveEvent(true);
}
function openViewContainer() {
    if (!TARGET_IMG_INFO.viewContainerEl) {
        console.error('obsidian-image-toolkit: image-toolkit-view-container has not been initialized.');
        return;
    }
    TARGET_IMG_INFO.viewContainerEl.style.setProperty('display', 'block');
    TARGET_IMG_INFO.state = true;
}
function closeViewContainer() {
    if (TARGET_IMG_INFO.viewContainerEl) {
        TARGET_IMG_INFO.viewContainerEl.style.setProperty('display', 'none');
        TARGET_IMG_INFO.state = false;
        renderImgTitle('');
        renderImgView('', '');
        // remove all events
        addOrRemoveEvent(false);
    }
}
function removeViewContainer() {
    if (TARGET_IMG_INFO.viewContainerEl) {
        TARGET_IMG_INFO.viewContainerEl.remove();
    }
    DRAGGING = false;
    TARGET_IMG_INFO.state = false;
    TARGET_IMG_INFO.viewContainerEl = null;
    TARGET_IMG_INFO.imgViewEl = null;
    TARGET_IMG_INFO.imgTitleEl = null;
    TARGET_IMG_INFO.curWidth = 0;
    TARGET_IMG_INFO.curHeight = 0;
    TARGET_IMG_INFO.realWidth = 0;
    TARGET_IMG_INFO.realHeight = 0;
    TARGET_IMG_INFO.moveX = 0;
    TARGET_IMG_INFO.moveY = 0;
    TARGET_IMG_INFO.rotate = 0;
}
function renderImgTitle(alt) {
    if (TARGET_IMG_INFO.imgTitleEl) {
        TARGET_IMG_INFO.imgTitleEl.setText(alt);
    }
}
function renderImgView(src, alt) {
    if (TARGET_IMG_INFO.imgViewEl) {
        TARGET_IMG_INFO.imgViewEl.setAttribute('src', src);
        TARGET_IMG_INFO.imgViewEl.setAttribute('alt', alt);
    }
}
function setImgViewPosition(imgZoomSize, rotate) {
    if (imgZoomSize) {
        TARGET_IMG_INFO.imgViewEl.setAttribute('width', imgZoomSize.width);
        TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-top', imgZoomSize.top, 'important');
        TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-left', imgZoomSize.left, 'important');
    }
    const rotateDeg = rotate ? rotate : 0;
    TARGET_IMG_INFO.imgViewEl.style.transform = 'rotate(' + rotateDeg + 'deg)';
    TARGET_IMG_INFO.rotate = rotateDeg;
}
function refreshImg(imgSrc, imgAlt) {
    const src = imgSrc ? imgSrc : TARGET_IMG_INFO.imgViewEl.src;
    const alt = imgAlt ? imgAlt : TARGET_IMG_INFO.imgViewEl.alt;
    if (src) {
        let realImg = new Image();
        realImg.src = src;
        REAL_IMG_INTERVAL = setInterval((img) => {
            if (img.width > 0 || img.height > 0) {
                clearInterval(REAL_IMG_INTERVAL);
                REAL_IMG_INTERVAL = null;
                let imgZoomSize = calculateImgZoomSize(img, TARGET_IMG_INFO);
                setImgViewPosition(imgZoomSize, 0);
                renderImgView(src, alt);
            }
        }, 40, realImg);
    }
}
function clickToolbarUl(event) {
    const targetElClass = event.target.className;
    switch (targetElClass) {
        case 'toolbar_zoom_im':
            TARGET_IMG_INFO.imgViewEl.setAttribute('width', zoom(0.1, TARGET_IMG_INFO) + 'px');
            break;
        case 'toolbar_zoom_out':
            TARGET_IMG_INFO.imgViewEl.setAttribute('width', zoom(-0.1, TARGET_IMG_INFO) + 'px');
            break;
        case 'toolbar_refresh':
            refreshImg();
            break;
        case 'toolbar_rotate_left':
            rotate(-90, TARGET_IMG_INFO);
            break;
        case 'toolbar_rotate_right':
            rotate(90, TARGET_IMG_INFO);
            break;
    }
}
function closeViewContainerByKeyup(event) {
    //console.log('keyup', event, event.code);
    event.stopPropagation();
    switch (event.code) {
        case 'Escape': // Esc
            closeViewContainer();
            break;
    }
}
const mousedownImgView = (event) => {
    // console.log('mousedownImgView', event);
    DRAGGING = true;
    event.stopPropagation();
    event.preventDefault();
    // 鼠标相对于图片的位置
    TARGET_IMG_INFO.moveX = TARGET_IMG_INFO.imgViewEl.offsetLeft - event.clientX;
    TARGET_IMG_INFO.moveY = TARGET_IMG_INFO.imgViewEl.offsetTop - event.clientY;
    // 鼠标按下时持续触发/移动事件 
    TARGET_IMG_INFO.viewContainerEl.onmousemove = mousemoveImgView;
    // 鼠标松开/回弹触发事件
    TARGET_IMG_INFO.viewContainerEl.onmouseup = mouseupImgView;
    TARGET_IMG_INFO.viewContainerEl.onmouseleave = mouseupImgView;
};
const mousemoveImgView = (event) => {
    if (!DRAGGING) {
        return;
    }
    // 修改图片位置
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-top', (event.clientY + TARGET_IMG_INFO.moveY) + 'px', 'important');
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-left', (event.clientX + TARGET_IMG_INFO.moveX) + 'px', 'important');
};
const mouseupImgView = (event) => {
    // console.log('mouseup...');
    DRAGGING = false;
    event.preventDefault();
    event.stopPropagation();
    TARGET_IMG_INFO.imgViewEl.onmousemove = null;
    TARGET_IMG_INFO.imgViewEl.onmouseup = null;
};
const mousewheelViewContainer = (event) => {
    // console.log('mousewheel', event, event.wheelDelta);
    event.preventDefault();
    event.stopPropagation();
    TARGET_IMG_INFO.imgViewEl.setAttribute('width', zoom(0 < event.wheelDelta ? 0.1 : -0.1, TARGET_IMG_INFO) + 'px');
};
function addOrRemoveEvent(flag) {
    if (flag) {
        // close the popup layer (image-toolkit-view-container) via clicking pressing Esc
        document.addEventListener('keyup', closeViewContainerByKeyup);
        // drag the image via mouse
        TARGET_IMG_INFO.imgViewEl.onmousedown = mousedownImgView;
        // TARGET_IMG_INFO.imgViewEl && TARGET_IMG_INFO.imgViewEl.addEventListener('mousedown', mousedownImgView);
        // zoom the image via mouse wheel
        TARGET_IMG_INFO.viewContainerEl.addEventListener('mousewheel', mousewheelViewContainer);
    }
    else {
        document.removeEventListener('keyup', closeViewContainerByKeyup);
        TARGET_IMG_INFO.imgViewEl.removeEventListener('mousedown', mousedownImgView);
        TARGET_IMG_INFO.viewContainerEl.removeEventListener('mousewheel', mousewheelViewContainer);
        if (REAL_IMG_INTERVAL) {
            clearInterval(REAL_IMG_INTERVAL);
            REAL_IMG_INTERVAL = null;
        }
    }
}

class ImageToolkitPlugin extends obsidian.Plugin {
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            console.log('loading obsidian-image-toolkit plugin...');
            yield this.loadSettings();
            // 插件设置弹框区
            this.addSettingTab(new ImageToolkitSettingTab(this.app, this));
            this.registerDomEvent(document, 'click', (event) => {
                const eventTargetEl = event.target;
                if (!this.settings.viewImageToggle || TARGET_IMG_INFO.state || 'IMG' !== eventTargetEl.tagName) {
                    return;
                }
                renderViewContainer(eventTargetEl, this.app.workspace.containerEl);
            });
        });
    }
    onunload() {
        console.log('unloading obsidian-image-toolkit plugin', this.settings);
        removeViewContainer();
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}

module.exports = ImageToolkitPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
